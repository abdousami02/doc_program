 
========== laravel porject ===========

export NODE_OPTIONS=--openssl-legacy-provider

composer create-project laravel/laravel blog "8.*"

composer create-project --prefer-dist laravel/laravel blog "8cl.*"

composer require laravel/ui:^3.0

php artisan ui vue

edit "package.json" file



----- code for artisan --------------

php artisan config:cache					// wher edit .env file

php artisan storage:link

php artisan make:migration create_nameTable_table
php artisan migrate
php artisan migrate:status
php artisan migrate:fresh

php artisan make:migration add_column_columnName --tableName		// edit column 2023_02_23_085554_create_order_table

php artisan migrate:refresh --path=/database/migrations/fileName.php	// refresh special table

php artisan make:model Product
php artisan make:model Product -m		creat migrat and model

php artisan make:controller ProductController


$method_qte = ( $data->method_price == 'unite') ? $data->qte_uc : 1 ;

calc_price(prod, method){
  if(method == "unite"){
	return (prod.price_sell1 / (prod.qte_uc / prod.method_qte)).toFixed(2);

  }else if(method == "cartone"){
	return (prod.price_sell1 * prod.method_qte).toFixed(2);

  }else if(method == "total"){
	let total = prod.price_sell1 * prod.method_qte * prod.order_qte || 0;
	prod.order_total = total;
	return total.toFixed(2);
  }
},
	
-------- model DataBase --------

 $data = NameModel::
					all();						// select and get all
					get()							// get all
					create(['col1' => val, 'col2' => val])
					select('col1', 'col2')->get()
					find()							// 
					where('col', val)->update('col', val)
					
----------- error storag permition ------

sudo chown -R $USER:www-data storage
sudo chown -R $USER:www-data bootstrap/cache

		//then to set directory permission try this:

chmod -R 775 storage
chmod -R 775 bootstrap/cache

=============== Blade ====================

@if
@endif

@csrf


// validate request and return error if fail
$req->validate([
  'title' => 'required | string ',
  'date'  => 'required | date',
  'location'  => 'required | string',
  'description'=> 'required | string',
]);


// show all errors
@if ($errors->any())
<div class="alert alert-danger">
  <ul>
    @foreach ($errors->all() as $error)
    <li>{{ $error }}</li>
    @endforeach
  </ul>
</div>
@endif



// show error alert
@error('tilte')
	<span class="invalid-feedback" role="alert">
	  <strong>{{ $message }}</strong>
	</span>
@enderror



// construct function
public function __construct()
  {
      $this->middleware('auth');
  }
 }


retrun back()->with('success', 'message')

@if(session('success'))
@endif


cronjobs


======== Template Dashboard =========

- 01 phoenix
- 02 Elaadmin
- 09 Sneat
- // 10 skydash
- 23 graindashboard
- //cleapatra
- // paper
- // corona
- // celestail
- Flat able
- react reducation

- Tabler
- Ready dashboard
- 


=========== switch version php ===========

apt install php8.2 php8.2-cli php8.2-curl php8.2-xml

sudo update-alternatives --set phar /usr/bin/php5.6


========= change lang ==========
set Franch Time:

    setlocale(LC_TIME, 'fr_FR');
    date_default_timezone_set('Europe/Paris');
    dd(utf8_encode(strftime('%A %d %B %Y, %H:%M')));


pagination : 

  @if ($paginator->hasPages())
    <div class="tm-pagination mt-50">
        <ul>
            @if (!$paginator->onFirstPage())
                <li><a href="{{ $paginator->previousPageUrl() }}"><i class="ion-chevron-left"></i></a></li>
            @endif

            @foreach ($elements as $element)
                @if (is_string($element))
                    <li><span>...</span></li>
                @endif

                {{-- Array Of Links --}}
                @if (is_array($element))
                    @foreach ($element as $page => $url)
                        @if ($page == $paginator->currentPage())
                            <li class="is-active"><a href="#">{{ $page }}</a></li>
                        @else
                            <li><a href="{{ $url }}">{{ $page }}</a></li>
                        @endif
                    @endforeach
                @endif
            @endforeach

            @if ($paginator->hasMorePages())
                <li><a href="{{ $paginator->nextPageUrl() }}"><i class="ion-chevron-right"></i></a></li>
            @endif
        </ul>
    </div>
@endif


==============
Paginator::defaultView('client.includes.pagination');
 
            Paginator::defaultSimpleView('client.includes.pagination');d

=======================

"devDependencies": {
        "@popperjs/core": "^2.10.2",
        "axios": "^0.21",
        "bootstrap": "^5.2.3",
        "laravel-mix": "^6.0.6",
        "lodash": "^4.17.19",
        "postcss": "^8.1.14",
        "resolve-url-loader": "^3.1.2",
        "sass": "^1.32.11",
        "sass-loader": "^11.0.1",
        "vue": "^3.2.36",
        "vue-template-compiler": "^2.7.10",
        "vue-router": "^4.1.6",
        "vuex": "^4.0.0"
    }
  
npm install
npm run dev

