 
========== laravel porject ===========

export NODE_OPTIONS=--openssl-legacy-provider

composer create-project laravel/laravel blog "8.*"

composer create-project --prefer-dist laravel/laravel blog "8cl.*"

composer require laravel/ui:^3.0

php artisan ui vue

edit "package.json" file



----- code for artisan --------------

php artisan config:cache					// wher edit .env file

php artisan storage:link

php artisan make:migration create_nameTable_table
php artisan migrate
php artisan migrate:status
php artisan migrate:fresh

php artisan make:migration add_column_columnName --tableName		// edit column 2023_02_23_085554_create_order_table

php artisan migrate:refresh --path=/database/migrations/fileName.php	// refresh special table

php artisan make:model Product
php artisan make:model Product -m		creat migrat and model

php artisan make:controller ProductController


$method_qte = ( $data->method_price == 'unite') ? $data->qte_uc : 1 ;

calc_price(prod, method){
  if(method == "unite"){
	return (prod.price_sell1 / (prod.qte_uc / prod.method_qte)).toFixed(2);

  }else if(method == "cartone"){
	return (prod.price_sell1 * prod.method_qte).toFixed(2);

  }else if(method == "total"){
	let total = prod.price_sell1 * prod.method_qte * prod.order_qte || 0;
	prod.order_total = total;
	return total.toFixed(2);
  }
},
	
-------- model DataBase --------

 $data = NameModel::
					all();						// select and get all
					get()							// get all
					create(['col1' => val, 'col2' => val])
					select('col1', 'col2')->get()
					find()							// 
					where('col', val)->update('col', val)
					
					
======= websit exp =========

diffrent with with(), has(), whereHas(): https://stackoverflow.com/questions/30231862/laravel-eloquent-has-with-wherehas-what-do-they-mean


=============== Blade ====================

@if
@endif

@csrf


// validate request and return error if fail
$req->validate([
  'title' => 'required | string ',
  'date'  => 'required | date',
  'location'  => 'required | string',
  'description'=> 'required | string',
]);


// show all errors
@if ($errors->any())
<div class="alert alert-danger">
  <ul>
    @foreach ($errors->all() as $error)
    <li>{{ $error }}</li>
    @endforeach
  </ul>
</div>
@endif



// show error alert
@error('tilte')
	<span class="invalid-feedback" role="alert">
	  <strong>{{ $message }}</strong>
	</span>
@enderror



// construct function
public function __construct()
  {
      $this->middleware('auth');
  }
 }


retrun back()->with('success', 'message')

@if(session('success'))
@endif


cronjobs


======== Template Dashboard =========

- 01 phoenix
- 02 Elaadmin
- 09 Sneat
- // 10 skydash
- 23 graindashboard
- //cleapatra
- // paper
- // corona
- // celestail
- Flat able
- react reducation

- Tabler
- Ready dashboard
- 
