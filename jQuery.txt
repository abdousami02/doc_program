
console.log(jQuery.fn.jquery) 		// get version of jquery

$(document).ready(function(){   //code   })  // do th function on the windows loade
$(function(){  // code })     // do th function on the windows loade

$('element').css("property","value");

------- Event ----------

	$("element").click(function(){   })     // onclick on the element do action
	$("element").dblclick(function(){   })   // on doble click

	$("element").mousedown()	Attaches/Triggers the mousedown event
	$("element").mouseup()	Attaches/Triggers the mouseup event

	$("element").mouseenter(function(){   })     // on hover the element and his child
	$("element").mouseover()	Attaches/Triggers the mouseover event not for child

	$("element").mouseleave(function(){   })	// on out the element and his child
	$("element").mouseout()	Attaches/Triggers the mouseout event not for child

	$("element").mousemove()	Attaches/Triggers the mousemove event

	$("element").hover(function(){ // on mouse enter  }, function(){ // on mouse leave })
	$("parentElement").on('event1 event2 ..' , 'element', ['data'], function{  },{event:function, event:function, ...} )
	$("element").on({ 
						event: function(){  }
						event: function(){  }
						event: function(){  }
					})
	$("element").bind('event', function(){ })			
	$("element").live('event', function(){ })        // add event listener
	$("parentElement").delegate('element', 'event', function(){ })     //add event listener

	.change(function(){ })		Attaches/Triggers the change event
	.focus(function(){ })		Attaches/Triggers the focus event not for child
	.focusin(function(){ })		Attaches an event handler to the focusin event
	.focusout(function(){ })	Attaches an event handler to the focusout event
	.blur(function(){ })		Attaches/Triggers the blur event not for child
	.hover(inFunct,outFunct)	Attaches two event handlers to the hover event

	.keydown(function(){ })		Attaches/Triggers the keydown event
	.keyup(function(){ })		Attaches/Triggers the keyup event
	.keypress(function(){ })	Attaches/Triggers the keypress event

	.ready()	Specifies a function to execute when the DOM is fully loaded
	.resize()	Attaches/Triggers the resize event
	.scroll()	Attaches/Triggers the scroll event
	.select()	Attaches/Triggers the select event
	.submit()	Attaches/Triggers the submit event

	event.pageX				mouse position relative to the left edge of the document
	event.pageY				mouse position relative to the top edge of the document
	event.preventDefault()	Prevents the default action of the event
	event.isDefaultPrevented() 
	event.relatedTarget		Returns which element being entered or exited on mouse movement
	event.result			Contains the last/previous value returned by an event handler triggered by the specified event
	
	event.currentTaget		 typically equal to this
	event.target.nodeName 	 return which DOM element triggered(call) the event
	event.namespace 		 returns the custom namespace when the event was triggered.
	event.type 				 return which event type was triggered if you hav multi event
	event.which				 returns which keyboard key was pressed for the event


	.on('event',childSelector,data,function,map)		Attaches event handlers to elements
	.one()		Adds one or more event handlers to selected elements. This handler can only be triggered once per element
	.off()		Removes event handlers attached with the on() method

	$.proxy()	Takes an existing function and returns a new one with a particular context

	trigger()			Triggers all events bound to the selected elements
	triggerHandler()	Triggers all functions bound to a specified event for the selected elements

------- Effects ----------

	.delay(speed,queueName)		Sets a delay for all queued functions on the selected elements

	$("").hide( speed, function(){  } /*callback*/)      // hide the element in left sid
	$("").show( speed, function(){  } /*callback*/)      // show the element in left sid
	$("").toggle( speed, function(){  } /*callback*/)      

	$("").fadeIn(speed, callback)			// show the element with opacity
	$("").fadeOut(speed, callback)			// hide the element with opacity
	$("").fadeToggle(speed, callback)
	$("").fadeTo(speed, opacity, callback)

	$("").slideDown( speed, callback)       // show the element whith slide down
	$("").slideUp( speed, callback)			// show the element whith slide up
	$("").slideToggle( speed, callback)

	$("").animate({CSS properties},speed,callback)  // we whrite 'marginLeft' instead of 'margin-left'
					width: '+=100px'  // add 100px to the element
					height: 'hide|show|toggle' 

					{
						$("").animate({left:'100px'});    // jQuery do list attente whene he finish the first work the next
						$("").animate({fontSize:'20px'})
					}
	$("").stop(stopAll'boolean',skipThisAnimat'boolean')  //  'sotopall' animate are in the attent , and 'goToEnd' skip the animation
	$("").clearQueue(queueName)			waite to finish this animat and removes all queued functions 
	$("").finish(queueName)		Stops, removes and completes all animations (go to the end)

	$("").queue()		Shows the queued functions on the selected elements
	$("").dequeue()	Removes the next function from the queue, and then executes the function
		eg:__   
				div.animate({width: 300}, "slow");
	         	div.queue(function(){
		            div.css("background-color", "red");  
		            div.dequeue();
	         	});
	         	didv.animate({height: 100}, "slow");

	$("").queue().length
	$("").clone(true|false)     // makes a copy of selected elements, including child nodes, text and attributes.

	$("").css("color", "red").slideUp(2000).slideDown(2000);  // channing
	$("").css("color", "red") // channing whith break
	  .slideUp(2000)
	  .slideDown(2000)

------- Selector ---------

	$("*")				All elements
	$("#lastname")		The element with id="lastname"
	$(".intro")			All elements with class="intro"
	$(".intro,.demo")	All elements with the class "intro" and "demo"
	$("p")				All <p> elements
	$("h1,div,p")		All <h1>, <div> and <p> elements
	$("body *")			All element in body
	 	 	 
	$("p:first")	The first <p> element
	$("p:last")		The last <p> element
	$("p:eq(0)")	The first <p> element
	$("ul li:gt(3)")	List elements with an index number higher than 3
	$("ul li:lt(3)")	List elements with an index number less than 3

	$("tr:even")	All <tr> elements index (0, 2, 4, 6)
	$("tr:odd")		All <tr> elements index (1, 3, 5, 7)
	$("input:not(:eq(3))")	All input elements except index 3

	[attribute]
	[attribute="value"]   equale value no space after or befor 
	[attribute!="value"]  not equale value
	[attribute~="value"] ( contain | value | and accept space after and befor)
	[attribute*="value"] ( contain |..value..| )

	[attribute^="value"] ( begin with |value...| no space after)
	[attribute$="value"] ( end with |..value| no space befor)

	[attribute|="value"] ( containe |value| or |value-|)

	$("p:first-child")		All <p> elements that are the first child of their parent
	$("p:first-of-type")	All <p> elements that are the first <p> element of their parent
	$("p:last-child")		All <p> elements that are the last child of their parent
	$("p:last-of-type")		All <p> elements that are the last <p> element of their parent
	$("p:nth-child(2)")		All <p> elements that are the 2nd child of their parent
	$("p:nth-last-child(2)") All <p> elements that are the 2nd child of their parent, counting from the last child
	$("p:nth-of-type(2)")		All <p> elements that are the 2nd <p> element of their parent
	$("p:nth-last-of-type(2)")	All <p> elements that are the 2nd <p> element of their parent, counting from the last child
	$("p:only-child")		All <p> elements that are the only child of their parent
	$("p:only-of-type")		All <p> elements that are the only child, of its type, of their parent
	 	 	 
	$("div > p")			All <p> elements that are a direct child of a <div> element
	$("div p")				All <p> elements that are descendants of a <div> element
	$("div + p")			The <p> element that are next to each <div> elements
	$("div ~ p")			The <p> elements that are siblings and appear after the <div> element:
	$(":header")			All header elements <h1>, <h2> ...
	$(":animated")			All animated elements
	$(":focus")				The element that currently has focus
	$(":contains('Hello')")	All elements which contains the text "Hello"
	$("div:has(p)")			All <div> elements that have a <p> element
	$(":empty")				All elements that are empty
	$(":parent")			All elements that are a parent of another element
	$("p:hidden")			All hidden <p> elements
	$("table:visible")		All visible tables
	$(":root")
	$("p:lang('en')")       All p element with attr lang='en'

	$(":input")			All input elements
	$(":text")			All input elements with type="text"
	$(":password")		All input elements with type="password"
	$(":radio")			All input elements with type="radio"
	$(":checkbox")		All input elements with type="checkbox"
	$(":submit")		All input elements with type="submit"
	$(":reset")			All input elements with type="reset"
	$(":button")		All input elements with type="button"
	$(":image")			All input elements with type="image"
	$(":file")			All input elements with type="file"
	$(":enabled")		All enabled input elements
	$(":disabled")		All disabled input elements
	$(":selected")		All selected input elements
	$(":checked")		All checked input elements

------------- DOM -------------

	$("").html()  			// get and set the innerHTML
	$("").text()			// get and set the text centent
	$("").val()				// get and set the value of input field
	$("").attr('attribut')  		// get the the attribute value
	$("").attr('attribut', 'value')  // set the the attribute value
	$("").attr({
				'attribut', 'value',
				'attribut', 'value',	// multiple attribute
				'attribut', 'value'

				})

	$("").prop(property)			// Return the value of a property
	$("").prop(property,value)		// Set the property and value
	$("").prop(property,function(index,currentvalue))		//  Set property and value using a function
	$("").prop({property:value, property:value,...})		// Set multiple properties and values

	$("").html( function( index, oldHTML ){  })  	// have callBack functiion, index of the current element in the list of elements
	$("").text(function( index, oldText ){   })		// have callBack functiion, index of the current element in the list of elements
	$("").attr('attribut' , function(index, oldattr){  })
	$("").removeAttr('attribut');



	$("").append( ,  , )       // Inserts content at the end of the selected elements (innerHTML)
	$("").prepend( ,  , )		// Inserts content at the beginning of the selected elements (innerHTML)

	$("").after( ,  , )		// Inserts content after the selected elements (outerHTML)
	$("").before( ,  , )		// Inserts content befor the selected elements (outerHTML)

	$('<p>hello</p>').appendTo('div')    // append the <p> element to the parent <div>
	$('<p>hello</p>').prependTo('div')   // prepend the <p> element to the parent <div>

	$('<p>hello</p>').insertAfter('div')
	$('<p>hello</p>').insertBefor('div')

	eg:__	$("<p></p>",{
			value: 'value'
			text:'welcome to jQuery',		// create text 
			class: 'clrRed'
			})

	$("<p></p>").text("Text.").addClass('clas1').appendTo('div');    // Create text with jQuery


	$("").remove() 			// Removes the selected element (and its child elements)
	$("").remove('.test') 	// Removes the selected element with calss='test' 
	$("").empty() 			// Removes the child elements from the selected element
	$("").detach()			// Removes selected elements (keeps data and events)

	$("").addClass() 		// Adds one or more classes to the selected elements
	$("").removeClass() 	// Removes one or more classes from the selected elements
	$("").toggleClass() 	// Toggles between adding/removing classes from the selected elements
	$("").hasClass('.test') // if the element has class 'test' or not

	$(content).replaceAll(selector)  //  replaces selected elements with new HTML elements.
	$(selector).replaceWith(content,function(index))  // replaces selected elements with new content:(HTML | jQuery | DOM)


	$("").css("propertyname","value")  // set a specified CSS property
	$("").css({"prop":"value" ,  "prop":"value",...});

	$("").width(400)		// set the width of an element 400px
	$("").width(400)

	$("").width()			// width of an element (excludes padding, border and margin).
	$("").innerWidth()		//  width and padding of an element 
	$("").outerWidth()		//  width +( padding , border ) of an element
	$("").outerWidth(true)	//  width +( padding , border , margin ) of an element


	$("").parent('p')       	// select the 'p' parent of element
	$("").parents('div')		// select all 'div' parents of element
	$("").parentsUntil('div') 	// select all parents except 'div'

	$("").children()    		// select the first child
	$("").find(*)				// select all child and grand-child and...
	$("").find('p:contain("test")')   // find the p element contain (test)

	$("").siblings()
	$("").next()
	$("").nextAll()
	$("").nextUntil()
	$("").prev()
	$("").prevAll()
	$("").prevUntil()

	$("").first()			// select the first of elements
	$("").last()			// select the last of elements
	$("").eq(2)				// select the 2 of elments
	$("").filter()
	$("").not('.test')		// select all elements and not withe class 'test'

	$("").position()		// the position of an element (relative to the parent element) 
				position().top
				position().left
	$("").offset({top:value,left:value})    // get or set the position of an element (relative to the document)
		 .offset(function(index,currentoffset))
		 	eg:__ $("p").offset($("span").offset());  // set the position of "p" from position of "span"
		 	eg:__ $("p").offset(function(n, c){
			 			newPos = new Object(); 		// creat new object 
					    newPos.left = c.left + 100;	// set left from currentOfsset
					    newPos.top = c.top + 100;	// set top from currentOfsset
					    return newPos;				// return the position as an object >> newPos = {top:num, left:num}
					    });
			eg:__ newPos = new Object();	// creat an object
				    newPos.left = "0";		// set lef 
				    newPos.top = "100";		// set top 
				    $("p").offset(newPos);	// set the postion of "p" from the object >> newPos = {top:100, left:0}
	$("").each(function(index,element))     // loop for element come foreach
	$('').has('element1, .claae1')  		// returns all elements that have special element or classes inside them.
	$('').is(Elem , class1 , :first-child ,func(index,elem))	// checks if the element matches the speciale elements.
	$('').parent.css({ // }).end()         		// end this chain and begin withe first select

	$("").scrollLeft()	Sets or returns the horizontal scrollbar position of selected elements
	$("").scrollTop()	Sets or returns the vertical scrollbar position of selected elements

	$('').wrap(wrappingElement,function(index))
	$("").unwrap()				// removes the parent element of the selected elements.
	$('').wrapAll(wrapElem)		// wraps specified HTML element(s) around all selected elements. (groupe them in wrapElm)
	$("").wrapInner(wrapElem ,function(index))		// wraps element(s) around the content (innerHTML) of each selected element.

-------- Json --------

	$("").getJSON('url', function(data){  })

-------- Ajax -------

	$("").load(URL,data,func(resTxt, statusTxt, xhr))
					url: "demo.html .contain"   // get part page is the element has class(.contain)
	
	$.get(URL,function(data, status, xhr){ });

	$.post(URL, data, function(data, status, xhr){ });

	$.ajax({
		async:		// cache the Request, Default is True
		timeout: 	// Timeout For The Request
		dataType:	//  Data Expected From the Server Response, defualt is intel Guess
		username:	// For Authentication
		password:	// For Authentication
		contentType: 'multipart/from-data' // content Type for the Request, dufault is 'application/x-from-urlencoded'
		
			type:		// method used for the Request if you're using versions of jQuery befor to 1.9.0.
		method:  	// method used for the Request not
		utl:   	 	// URL to send the Request dufault is current url
		data:    	// data To send withe request
		
		beforSend: function(xhr){ } 				  // Function run befor Request is send
		succses: function(resTxt, statusTxt, xhr){};  // Function run when Request is succus 
		error: function(){xhr, statusTxt, error}      // Function run when Request is error
		complete: function(xhr, statusTxt){} 		  // Function run when Request is compleated succus or error

	})

--
extention	
	   eg:_	$.extend($.expr[':'],{
				NameExtend : function(element){
				 		\\ code Extention
				 	if($(element).	== //code){

				 		return $(element);

				 	}
				}
			})

Plugin
		eg:__	$.fn.namePlugin = function(){
						$(this).// code
						return $(this);
					}